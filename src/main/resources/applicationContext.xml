<?xml version="1.0" encoding="ISO-8859-1"?>

<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
>
    <!-- Declare property file locations -->
    <context:property-placeholder location="classpath:IBPDatasource.properties, classpath:workbench.properties" />
    
    <!-- Enable Spring annotations -->
    <context:annotation-config/>
    
    <!--
        Enable load-time-weaving so we can use @Configurable annotation.
        To make this work, we need to set the -java.agent VM argument to the spring-instrument JAR file's path.
        In windows, you can use:
            -javaagent:${env_var:HOMEDRIVE}${env_var:HOMEPATH}\.m2\repository\org\springframework\spring-instrument\3.1.1.RELEASE\spring-instrument-3.1.1.RELEASE.jar
        Mac and Linux users, add your path here.
    -->
    <context:load-time-weaver/>
    
    
    <!-- The application classes -->
    <bean id="application" class="org.generationcp.browser.application.GermplasmStudyBrowserApplication" scope="prototype"/>
    
    <!--
        Reuseable UI components can be declared here, but don't do it just so you can have auto-wiring.
        Add @Configurable annotation to your class if you only need auto-wiring.
    -->

    <!-- The Message Source -->
    <bean id="messageSource" class="org.generationcp.commons.vaadin.spring.SimpleResourceBundleMessageSource">
        <property name="basename" value="I18NMessages"/>
        <property name="locale">
            <util:constant static-field="java.util.Locale.ENGLISH"/>
        </property>
    </bean>

    <!-- The data source configuration -->
    <bean id="localDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${local.driver}"/>
        <property name="url" value="${local.url}"/>
        <property name="username" value="${local.username}"/>
        <property name="password" value="${local.password}"/>
    </bean>
    
    <bean id="centralDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${central.driver}"/>
        <property name="url" value="${central.url}"/>
        <property name="username" value="${central.username}"/>
        <property name="password" value="${central.password}"/>
    </bean>
    
    <bean id="workbenchDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${workbench.driver}"/>
        <property name="url" value="${workbench.url}"/>
        <property name="username" value="${workbench.username}"/>
        <property name="password" value="${workbench.password}"/>
    </bean>
    
    <bean id="localSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="localDataSource"/>
        <property name="configLocation" value="classpath:ibpmidware_hib.cfg.xml"/>
    </bean>
    
    <bean id="centralSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="centralDataSource"/>
        <property name="configLocation" value="classpath:ibpmidware_hib.cfg.xml"/>
    </bean>
    
    <bean id="workbenchSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="workbenchDataSource"/>
        <property name="configLocation" value="classpath:ibpworkbench_hib.cfg.xml"/>
    </bean>
    
    <bean id="localHibernateSessionProvider" class="org.generationcp.middleware.hibernate.HibernateSessionPerRequestProvider" scope="request" destroy-method="close">
        <property name="sessionFactory" ref="localSessionFactory"/>
        
        <!-- JDK Standard Proxy around this request scoped bean, so we can use it on longer scoped beans -->
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>
    
    <bean id="centralHibernateSessionProvider" class="org.generationcp.middleware.hibernate.HibernateSessionPerRequestProvider" scope="request" destroy-method="close">
        <property name="sessionFactory" ref="centralSessionFactory"/>
        
        <!-- JDK Standard Proxy around this request scoped bean, so we can use it on longer scoped beans -->
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>
    
    <bean id="workbenchHibernateSessionProvider" class="org.generationcp.middleware.hibernate.HibernateSessionPerRequestProvider" scope="request" destroy-method="close">
        <property name="sessionFactory" ref="workbenchSessionFactory"/>
        
        <!-- JDK Standard Proxy around this request scoped bean, so we can use it on longer scoped beans -->
        <aop:scoped-proxy proxy-target-class="false"/>
    </bean>
    
    <bean id="genotypicDataManager" class="org.generationcp.middleware.manager.GenotypicDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    
    <bean id="germplasmDataManager" class="org.generationcp.middleware.manager.GermplasmDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    
    <bean id="pedigreeDataManager" class="org.generationcp.middleware.manager.PedigreeDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
        <property name="germplasmDataManager" ref="germplasmDataManager"/>
    </bean>
          
    <bean id="germplasmListManager" class="org.generationcp.middleware.manager.GermplasmListManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
        
    <bean id="inventoryDataManager" class="org.generationcp.middleware.manager.InventoryDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    
    <bean id="studyDataManager" class="org.generationcp.middleware.manager.StudyDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    
    
    <bean id="ontologyDataManager" class="org.generationcp.middleware.manager.OntologyDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    
    <!--  
    <bean id="traitDataManager" class="org.generationcp.middleware.manager.TraitDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    -->
    
    <bean id="userDataManager" class="org.generationcp.middleware.manager.UserDataManagerImpl">
        <property name="sessionProviderForLocal" ref="localHibernateSessionProvider"/>
        <property name="sessionProviderForCentral" ref="centralHibernateSessionProvider"/>
    </bean>
    
    <bean id="workbenchDataManager"
        class="org.generationcp.middleware.manager.WorkbenchDataManagerImpl">
        <constructor-arg ref="workbenchHibernateSessionProvider" />
    </bean>
    
    <!--
        Reuseable UI components can be declared here, but don't do it just so you can have auto-wiring.
        Add @Configurable annotation to your class if you only need auto-wiring.
    -->
</beans>
